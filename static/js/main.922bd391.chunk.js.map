{"version":3,"sources":["components/Navbar.js","context/Alert/AlertContext.js","context/Github/GithubContext.js","components/Search.js","components/Card.js","pages/Home.js","components/Repos.js","pages/Profile.js","pages/About.js","components/Alert.js","context/Alert/AlertReducer.js","context/Alert/types.js","context/Alert/AlertState.js","context/Github/GithubReducer.js","context/Github/GithubState.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","exact","to","AlertContext","createContext","GithubContext","Search","useState","value","setValue","alert","useContext","github","type","placeholder","onKeyPress","event","key","clearUsers","trim","hide","search","show","onChange","target","Card","user","src","avatar_url","alt","login","Home","loading","users","map","id","Repos","repos","repo","href","html_url","rel","name","Profile","match","getUser","getRepos","urlName","params","useEffect","company","location","bio","blog","followers","public_repos","public_gists","following","console","log","style","width","About","Alert","role","text","aria-label","onClick","aria-hidden","AlertReducer","state","action","payload","AlertState","children","useReducer","dispatch","Provider","handlers","GithubReducer","DEFAULT","withCreds","url","process","GithubState","a","setLoading","axios","get","response","data","items","App","component","path","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.922bd391.chunk.js","sourcesContent":["import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst  Navbar = () => (\r\n    <nav className='navbar navbar-dark bg-primary navbar-expand-lg'>\r\n        <div className='navbar-brand'>GitHub Search</div>\r\n        <ul className='navbar-nav'>\r\n            <li className='nav-item'>\r\n                <NavLink className='nav-link' exact to='/'>Головна</NavLink>\r\n            </li>\r\n            <li className='nav-item'>\r\n                <NavLink className='nav-link' to='/about'>Інформація</NavLink>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n)\r\n\r\nexport default Navbar","import {createContext} from 'react'\r\n\r\nexport const AlertContext = createContext()","import {createContext} from 'react'\r\n\r\nexport const GithubContext = createContext()","import React, { useContext, useState } from \"react\";\r\nimport { AlertContext } from \"../context/Alert/AlertContext\";\r\nimport { GithubContext } from \"../context/Github/GithubContext\";\r\n\r\nexport const Search = () => {\r\n\r\nconst [value, setValue] = useState('')\r\nconst alert = useContext(AlertContext);\r\nconst github = useContext(GithubContext)\r\n\r\n  const onSubmit = (event) => {\r\n    if (event.key !== \"Enter\") {\r\n        return\r\n     }\r\n     github.clearUsers()\r\n     \r\n    \r\n     if (value.trim()) {\r\n        alert.hide()\r\n         github.search(value.trim())\r\n     } else {\r\n         alert.show('Введіть дані користувача')\r\n     }\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"from-group\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        placeholder=\"Введіть нік користувача...\"\r\n        onKeyPress={onSubmit}\r\n        value={value}\r\n        onChange={event => setValue(event.target.value) }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const Card = ({user})=> (\r\n    <div className='card'>\r\n        <img className='card-img-top' src={user.avatar_url} alt={user.login} />\r\n        <div className='card-body'>\r\n            <h5 className='card-title'>{user.login}</h5>\r\n            <Link to={'/profile/' \r\n            + user.login} className='btn btn-primary'>Відкрити</Link>\r\n        </div>\r\n    </div>\r\n)","import React, {useContext} from \"react\";\r\nimport { Search } from \"../components/Search\";\r\nimport { Card } from \"../components/Card\";\r\nimport { GithubContext } from \"../context/Github/GithubContext\";\r\n\r\nexport const Home = () => {\r\n\r\n    const {loading, users} = useContext(GithubContext)\r\n\r\n  return (\r\n    <>\r\n      <Search />\r\n\r\n      <div className=\"row\">\r\n        {loading\r\n          ? <p className='text-center'>Загрузка....</p>\r\n          : users.map(user => (\r\n            <div className=\"col-sm-4 mb-4 mt-3\" key={user.id}>\r\n                  <Card user={user} />\r\n              </div>\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Repos = ({ repos }) => (\r\n  <>\r\n    {repos.map((repo) => (\r\n      <div className=\"card mb-3\" key={repo.id}>\r\n        <div className=\"card-body\">\r\n          <h5>\r\n            <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {repo.name}\r\n            </a>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    ))}\r\n  </>\r\n);\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { GithubContext } from \"../context/Github/GithubContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Repos } from \"../components/Repos\";\r\n\r\nexport const Profile = ({ match }) => {\r\n  const { getUser, getRepos, loading, user, repos } = useContext(GithubContext);\r\n  \r\n  const urlName = match.params.name\r\n\r\n  useEffect(() => {\r\n    getUser(urlName)\r\n    getRepos(urlName)\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  if (loading) {\r\n    return <p className=\"text-center\">Загрузка....</p>;\r\n  }\r\n\r\n  const {\r\n    name,\r\n    company,\r\n    avatar_url,\r\n    location,\r\n    bio,\r\n    blog,\r\n    login,\r\n    html_url,\r\n    followers,\r\n    public_repos,\r\n    public_gists,\r\n    following\r\n  } = user;\r\n  console.log(user)\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/\" className=\"btn btn-link\">\r\n        На головну сторінку\r\n      </Link>\r\n\r\n      <div className=\"card mb-4\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-3 text-center\">\r\n              <img src={avatar_url} alt={name} style={{width: '150px'}} />\r\n              <h1>{name}</h1>\r\n              {location && <p>Місцезнаходження: {location}</p>}\r\n            </div>\r\n            <div className=\"col\">\r\n              {bio && (\r\n                <>\r\n                  <h3>BIO</h3>\r\n                  <p>{bio}</p>\r\n                </>\r\n              )}\r\n              <a href={html_url} className=\"btn btn-dark\" target='_blank' rel=\"noopener noreferrer\">\r\n                Відкрити профіль\r\n              </a>\r\n              <ul>\r\n                {login && (\r\n                  <li>\r\n                    <strong>UserName: </strong>\r\n                    {login}\r\n                  </li>\r\n                )}\r\n                {company && (\r\n                  <li>\r\n                    <strong>Компанія: </strong>\r\n                    {company}\r\n                  </li>\r\n                )}\r\n                {blog && (\r\n                  <li>\r\n                    <strong>Вебсайт: </strong>\r\n                    {blog}\r\n                  </li>\r\n                )}\r\n              </ul>\r\n                <div className='badge badge-primary'>Підписники:{followers}</div>\r\n                <div className='badge badge-success'>Підписаний:{following}</div>\r\n                <div className='badge badge-info'>Репозиторії:{public_repos}</div>\r\n                <div className='badge badge-dark'>Gists:{public_gists}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Repos repos={repos} />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const About = () => {\r\n  return (\r\n    <div className=\"jumbotron jumbotron-fluid\">\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4\">Інформація</h1>\r\n        <p className=\"lead\">Веб-программа: <strong>1.0.0</strong></p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, {useContext} from 'react'\r\nimport { AlertContext } from '../context/Alert/AlertContext'\r\n\r\nexport const Alert = () => {\r\n\r\n    const {alert, hide} = useContext(AlertContext)\r\n\r\n    if(!alert) return null\r\n\r\n    return (\r\n        <div>\r\n            <div className={`alert alert-${alert.type || 'secondary'} alert-dismissible`} role=\"alert\">\r\n                {alert.text}\r\n                <button type=\"button\" className=\"close\"  aria-label=\"Close\" onClick={hide}>\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { SHOW_ALERT, HIDE_ALERT } from \"./types\";\r\n\r\n// const handlers = {\r\n//     [SHOW_ALERT]: (state, action) => action.payload,\r\n//     [HIDE_ALERT]: () => null,\r\n//     DEFAULT: state => state\r\n// }\r\n\r\n// export const AlertReducer = (state, action) => {\r\n//     const handler = handlers[action.type] || handlers.DEFAULT\r\n//     return handler(state,action)\r\n// }\r\n\r\nexport const AlertReducer = (state, action) => {\r\n\r\n    switch (action.type) {\r\n        case SHOW_ALERT: return action.payload\r\n        case HIDE_ALERT: return null\r\n        \r\n        default: return state\r\n    }\r\n}","export const SHOW_ALERT = 'SHOW_ALERT'\r\nexport const HIDE_ALERT = 'HIDE_ALERT'\r\nexport const CLEAR_USERS = 'CLEAR_USERS'\r\nexport const GET_REPOS = 'GET_REPOS'\r\nexport const GET_USERS = 'GET_USERS'\r\nexport const GET_USER = 'GET_USER'\r\nexport const SEARCH_USERS = 'SEARCH_USERS'\r\nexport const SET_LOADING = 'SET_LOADING'","import React, { useReducer } from \"react\";\r\nimport { AlertContext } from \"./AlertContext\";\r\nimport { AlertReducer } from \"./AlertReducer\";\r\nimport { HIDE_ALERT, SHOW_ALERT } from \"./types\";\r\n\r\nexport const AlertState = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AlertReducer, null);\r\n\r\n  const hide = () => dispatch({ type: HIDE_ALERT });\r\n  const show = (text, type = \"secondary\") => {\r\n    dispatch({\r\n      type: SHOW_ALERT,\r\n      payload: { type, text },\r\n    });\r\n  };\r\n\r\n  return <AlertContext.Provider value={{\r\n      hide, show, alert: state\r\n  }}>\r\n      {children}\r\n      </AlertContext.Provider>;\r\n};\r\n","import { CLEAR_USERS, GET_REPOS, SEARCH_USERS, SET_LOADING,GET_USER } from \"../Alert/types\"\r\n\r\nconst handlers = {\r\n    [SEARCH_USERS]: (state, {payload}) =>({...state, users:payload, loading:false}), \r\n    [GET_REPOS]: (state, {payload}) =>({...state, repos:payload, loading:false}), \r\n    [GET_USER]: (state, {payload}) =>({...state, user:payload, loading:false}), \r\n    [SET_LOADING]: (state ) =>({...state, loading:true}), \r\n    [CLEAR_USERS]: (state) => ({...state, users:[]}),\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport const GithubReducer = (state, action) => {\r\n    const handler = handlers[action.type] || handlers.DEFAULT\r\n\r\n    return handler(state, action)\r\n}","import React, {useReducer} from 'react'\r\nimport { CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING } from '../Alert/types'\r\nimport axios from 'axios'\r\nimport { GithubContext } from './GithubContext'\r\nimport { GithubReducer } from './GithubReducer'\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID\r\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET\r\n\r\nconst withCreds = url => {\r\n  return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\r\n}\r\n\r\n\r\nexport const GithubState = ({children}) => {\r\n  const initialState = {\r\n    user: {},\r\n    users: [],\r\n    loading: false,\r\n    repos: []\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(GithubReducer, initialState)\r\n\r\n  const search = async value => {\r\n    setLoading()\r\n\r\n    const response = await axios.get(\r\n      withCreds(`https://api.github.com/search/users?q=${value}&`)\r\n    )\r\n\r\n    dispatch({\r\n      type: SEARCH_USERS,\r\n      payload: response.data.items\r\n    })\r\n  }\r\n\r\n  const getUser = async name => {\r\n    setLoading()\r\n\r\n    const response = await axios.get(\r\n      withCreds(`https://api.github.com/users/${name}?`)\r\n    )\r\n\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: response.data\r\n    })\r\n  }\r\n\r\n  const getRepos = async name => {\r\n    setLoading()\r\n\r\n    const response = await axios.get(\r\n      withCreds(`https://api.github.com/users/${name}/repos?per_page=5&`)\r\n    )\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: response.data\r\n    })\r\n  }\r\n\r\n  const clearUsers = () => dispatch({type: CLEAR_USERS})\r\n\r\n  const setLoading = () => dispatch({type: SET_LOADING})\r\n\r\n  const {user, users, repos, loading} = state\r\n\r\n  \r\n\r\n  return (\r\n    <GithubContext.Provider value={{\r\n      setLoading, search, getUser, getRepos, clearUsers,\r\n      user, users, repos, loading\r\n    }}>\r\n      {children}\r\n    </GithubContext.Provider>\r\n  )\r\n}\r\n","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport { Home } from \"./pages/Home\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Profile } from \"./pages/Profile\";\nimport { About } from \"./pages/About\";\nimport { Alert } from \"./components/Alert\";\nimport { AlertState } from \"./context/Alert/AlertState\";\nimport { GithubState } from \"./context/Github/GithubState\";\n\nfunction App() {\n  return (\n    <>\n      <GithubState>\n        <AlertState>\n          <BrowserRouter>\n            <Navbar />\n            <div className=\"container pt-4\">\n              <Alert alert={{ text: \"Test alert\" }} />\n              <Switch>\n                <Route component={Home} path=\"/\" exact />\n                <Route component={Profile} path=\"/profile/:name\" />\n                <Route component={About} path=\"/about\" />\n              </Switch>\n            </div>\n          </BrowserRouter>\n        </AlertState>\n      </GithubState>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}